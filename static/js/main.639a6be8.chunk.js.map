{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Projects","props","useState","projects","setProjects","useEffect","console","log","fetch","userData","repos_url","then","data","json","respdata","className","style","textAlign","map","proj","name","href","clone_url","target","rel","Profile","html_url","company","location","email","bio","App","userName","setUserName","setUserData","loading","setLoading","error","setError","avtar","setAvtar","flag","setFlag","status","setTimeout","avatar_url","border","paddingBottom","backgroundColor","marginBottom","marginTop","src","alt","color","placeholder","autoFocus","onKeyDown","e","key","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.639a6be8.chunk.js","sourcesContent":["import './App.css';\nimport { useEffect, useState } from \"react\";\n\nfunction Projects(props){\n  const [projects,setProjects] = useState([]);\n\n  useEffect(() => {\n    console.log(\"In Project UseEffect\");\n    fetch(props.userData.repos_url).then((data) => {return data.json()}).then((respdata) => {\n      setProjects(respdata);\n    })\n  },[]);\n\n  return(\n    <div className=\"infoDiv\">\n      <h1 style={{textAlign: \"center\"}} >Projects</h1>\n      <div className='alignDiv'>\n        <div>\n          {projects.map((proj) => {\n            return(\n              <p>{proj.name}</p>\n            )\n          })}\n        </div>\n        <div>\n          {projects.map((proj) => {\n            return(\n              <a href={proj.clone_url} target=\"_blank\" rel=\"noreferrer\">Github.URL</a>\n            )\n          })}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction Profile(props){\n  return(\n    <div className=\"infoDiv\">\n      <h1 style={{textAlign: \"center\"}} >Profile</h1>\n      <div className='alignDiv'>\n        <div>\n          <p>html_url</p>\n          <p>repos_url</p>\n          <p>name</p>\n          <p>company</p>\n          <p>location</p>\n          <p>email</p>\n          <p>bio</p>\n        </div>\n        <div>\n          <a href={props.userData.html_url} target=\"_blank\" rel=\"noreferrer\">Github.URL</a>\n          <a href={props.userData.repos_url} target=\"_blank\" rel=\"noreferrer\">{props.userData.repos_url}</a>\n          <p className=\"alignLinks\">{props.userData.name}</p>\n          <p className=\"alignLinks\">{props.userData.company}</p>\n          <p className=\"alignLinks\">{props.userData.location}</p>\n          <p className=\"alignLinks\">{props.userData.email}</p>\n          <p className=\"alignLinks\">{props.userData.bio}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction App(props) {\n\n  const githubAPIUrl = 'https://api.github.com/users/';\n  const [userName, setUserName] = useState('');\n  const [userData, setUserData] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [avtar, setAvtar] = useState(\"https://github.com/github.png?size=460\");\n  const [flag, setFlag] = useState(false);\n\n\n  useEffect(()=>{\n    // console.log(\"in App useEffect\");\n    if(userName !== ''){\n    console.log(userName);\n    setLoading(true);\n    setFlag(true);\n    fetch(githubAPIUrl+userName).then(\n      data => {\n        if(data.status === 404){\n          setError(true)\n        }else if(data.status === 200){\n          setError(false)\n        }\n        return data.json() \n      }).then(\n        setUserData).then(\n         setTimeout(()=> {\n          setLoading(false)\n        },2000) \n        );\n    }\n  },[userName])\n\n  useEffect(() => {\n    if(userData !== {}){\n      // console.log(\"userdata useEffect\",userData);\n      setAvtar(userData.avatar_url);\n    }\n  },[userData])\n\n  return (\n    <div className=\"app\" style={{border: \"2px solid black\",paddingBottom: \"10px\"}}>\n      <div style={{backgroundColor: \"black\",paddingBottom: \"10px\",marginBottom: \"20px\"}}>\n        <img className=\"github-avtar\" style={{marginTop: \"0px\"}}src=\"https://github.com/github.png?size=460\" alt=\"Profile Pic\" />\n        <h1 style={{textAlign: \"center\",color: \"white\"}} >My Github Portfolio</h1>\n      </div>\n      {error && <p>Person Not Found</p>}\n      <input className=\"input-username\" placeholder='Enter Github Username' autoFocus={true} onKeyDown={(e) => {\n        if(e.key === \"Enter\"){\n          setUserName(e.target.value);\n        }\n      }} />\n      {loading && <img src=\"https://miro.medium.com/max/1400/1*CsJ05WEGfunYMLGfsT2sXA.gif\" alt=\"Loading\" />}\n      {/* {!loading && <img className=\"github-avtar\" src={userData.avatar_url} alt=\"Profile Pic\" /> } */}\n      { flag && <img className=\"github-avtar\" src={avtar} alt=\"Profile Pic\" />}\n      { flag && <Profile userData={userData}/>}\n      {/* Profile Information */}\n      {/* <div className=\"infoDiv\">\n        { !loading && <h1 style={{textAlign: \"center\"}} >Profile</h1>}\n        <div className='alignDiv'>\n          <div>\n            <p>html_url</p>\n            <p>repos_url</p>\n            <p>name</p>\n            <p>company</p>\n            <p>location</p>\n            <p>email</p>\n            <p>bio</p>\n          </div>\n          <div>\n            <a href={userData.html_url}>Github.URL</a>\n            <a href={userData.repos_url}>{userData.repos_url}</a>\n            <p className=\"alignLinks\">{userData.name}</p>\n            <p className=\"alignLinks\">{userData.company}</p>\n            <p className=\"alignLinks\">{userData.location}</p>\n            <p className=\"alignLinks\">{userData.email}</p>\n            <p className=\"alignLinks\">{userData.bio}</p>\n          </div>\n        </div>\n      </div> */}\n\n\n      { flag && <Projects userData={userData} />}\n      {/* Listing of Projects */}\n      {/* <div className=\"infoDiv\">\n        { !loading && <h1 style={{textAlign: \"center\"}} >Projects</h1>}\n        <div className='alignDiv'>\n          <div>\n            <p>Public Repos by user: {userData.public_repos}</p>\n            <p>Public Gists by user: {userData.public_gists}</p>\n          </div>\n          <div>\n          <a href=\"#\">Github.URL</a>\n          <a href=\"#\">Github.URL</a>\n          </div>\n        </div>\n      </div> */}\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}